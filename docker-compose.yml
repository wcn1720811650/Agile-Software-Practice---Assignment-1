version: '3.8'

networks:
  backend:                       
  frontend:                      

volumes:
  profiledata:                  
  redisdata:   
  mongodb-data:
    driver: local                  

services:
  movies-api:
    container_name: movies-api
    image: doconnor/movies-api:1.0
    environment:
      - MONGODB_URI=mongodb://admin:secret@database:27017
      - REDIS_URI=redis://redis
      - ENABLE_WRITING_HANDLERS=false
    ports:
      - 9000:9000                
    networks:
      - backend                  
    depends_on:
      - database
      - redis

  database:
    container_name: database 
    image: mongo:8.0-rc
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    networks:
      - backend                  
      - frontend                 
    volumes:
      - mongodb-data:/data/db

  redis:
    container_name: redis
    image: redis:alpine
    networks:
      - backend                  
    volumes:
      - redisdata:/data

  mongo-express:
    container_name: mongo-express
    image: mongo-express:1.0-20-alpine3.19
    restart: always
    ports:
      - 8080:8081                 
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=secret
      - ME_CONFIG_MONGODB_SERVER=database  
    networks:
      - frontend                 
    depends_on:
      - database

  seeding-mongo:
    container_name: seeding-mongo  
    image: mongo:8.0-rc
    depends_on:
      - database
    profiles:
      - dev
    volumes:
      - ./seeding.json:/seeding.json
    environment:
      - MONGODB_DATABASE=moviesdb
      - MONGODB_URI=mongodb://admin:secret@database:27017  
    command: >
        bash -c "mongoimport --host database --db moviesdb --collection your_collection_name --type json --file /seeding.json --jsonArray"
    networks:
      - backend                    
